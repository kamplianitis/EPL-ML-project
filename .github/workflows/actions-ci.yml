name: EPL ML CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.10.12]
        poetry-version: [1.8.4]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Poetry setup
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{matrix.poetry-version}}
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
            path: ~/.cache/pypoetry
            key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
            restore-keys: |
              poetry-${{ runner.os }}-
      - run: poetry install --with dev
      - name: Run Ruff (Lint)
        run: poetry run ruff check --config ruff.toml

  

  security:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.10.12]
        poetry-version: [1.8.4]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{matrix.poetry-version}}

      - run: poetry install --with dev
      - name: Run Bandit (Security Scan)
        run: poetry run bandit -r . -ll -ii
  
  # test:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.10.12]
  #       poetry-version: [1.8.4]
  #       os: [ubuntu-latest]
  #   runs-on: ${{matrix.os}}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{matrix.python-version}}
  #     - uses: abatilo/actions-poetry@v2.0.0
  #       with:
  #         poetry-version: ${{matrix.poetry-version}}

  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.cache/pypoetry
  #         key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
  #         restore-keys: |
  #           poetry-${{ runner.os }}-

  #     - run: poetry install --with dev,test
  #     - name: Run Tests with Coverage
  #       run: |
  #         poetry run pytest --cov=testing --cov-report=xml
  #     - name: Upload Coverage Report
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: ./coverage.xml